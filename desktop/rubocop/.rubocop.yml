# TODO: Try getting more rules in sync.

require:
  - rubocop-performance
  - rubocop-rails

AllCops:
  TargetRubyVersion: 2.6
  DisplayCopNames: false
  # enable all pending rubocops
  NewCops: enable

# makes DSL usage ugly.
Layout/SpaceBeforeBrackets:
  Enabled: false

# Use `<<~` for heredocs.
Layout/HeredocIndentation:
  Enabled: true

# Keyword arguments don't have the same readability
# problems as normal parameters.
Metrics/ParameterLists:
  CountKeywordArgs: false

# Allow dashes in filenames.
Naming/FileName:
  Regex: !ruby/regexp /^[\w\@\-\+\.]+(\.rb)?$/

# Implicitly allow EOS as we use it everywhere.
Naming/HeredocDelimiterNaming:
  ForbiddenDelimiters:
    - END, EOD, EOF

Naming/MethodName:
  IgnoredPatterns:
    - '\A(fetch_)?HEAD\?\Z'

# Both styles are used depending on context,
# e.g. `sha256` and `something_countable_1`.
Naming/VariableNumber:
  Enabled: false

# Require &&/|| instead of and/or
Style/AndOr:
  Enabled: true
  EnforcedStyle: always

# Avoid leaking resources.
Style/AutoResourceCleanup:
  Enabled: true

# This makes these a little more obvious.
Style/BarePercentLiterals:
  EnforcedStyle: percent_q

# Use consistent style for better readability.
Style/CollectionMethods:
  Enabled: true

# Prefer tokens with type annotations for consistency
# between formatting numbers and strings.
Style/FormatStringToken:
  EnforcedStyle: annotated

# autocorrectable and more readable
Style/HashEachMethods:
  Enabled: true
Style/HashTransformKeys:
  Enabled: true
Style/HashTransformValues:
  Enabled: true

# Allow for license expressions
Style/HashAsLastArrayItem:
  Enabled: false

# Enabled now LineLength is lowish.
Style/IfUnlessModifier:
  Enabled: true

# Only use this for numbers >= `1_000_000`.
Style/NumericLiterals:
  MinDigits: 7
  Strict: true

# Zero-prefixed octal literals are widely used and understood.
Style/NumericLiteralPrefix:
  EnforcedOctalStyle: zero_only

# Rescuing `StandardError` is an understood default.
Style/RescueStandardError:
  EnforcedStyle: implicit

# Returning `nil` is unnecessary.
Style/ReturnNil:
  Enabled: true

# We have no use for using `warn` because we
# are calling Ruby with warnings disabled.
Style/StderrPuts:
  Enabled: false

# Use consistent method names.
Style/StringMethods:
  Enabled: true

# An array of symbols is more readable than a symbol array
# and also allows for easier grepping.
Style/SymbolArray:
  EnforcedStyle: brackets

# Trailing commas make diffs nicer.
Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma
Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma
Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

# Does not hinder readability, so might as well enable it.
Performance/CaseWhenSplat:
  Enabled: true

# Makes code less readable for minor performance increases.
Performance/Caller:
  Enabled: false

# Makes code less readable for minor performance increases.
Performance/MethodObjectAsBlock:
  Enabled: false

# Skip these as they only apply to actual Rails and not our ActiveSupport usage.
Rails/ArelStar:
  Enabled: false
Rails/Date:
  Enabled: false
Rails/Delegate:
  Enabled: false
Rails/RakeEnvironment:
  Enabled: false
Rails/SkipsModelValidations:
  Enabled: false
Rails/Pluck:
  Enabled: false
Rails/TimeZone:
  Enabled: false

# Don't allow cops to be disabled in casks and formulae.
Style/DisableCopsWithinSourceCodeDirective:
  Enabled: true

# make our hashes consistent
Layout/HashAlignment:
  EnforcedHashRocketStyle: table
  EnforcedColonStyle: table

# `system` is a special case and aligns on second argument, so allow this for formulae.
Layout/ArgumentAlignment:
  Enabled: false

# this is a bit less "floaty"
Layout/CaseIndentation:
  EnforcedStyle: end

# this is a bit less "floaty"
Layout/EndAlignment:
  EnforcedStyleAlignWith: start_of_line

# conflicts with DSL-style path concatenation with `/`
Layout/SpaceAroundOperators:
  Enabled: false

# layout is not configurable (https://github.com/rubocop-hq/rubocop/issues/6254).
Layout/RescueEnsureAlignment:
  Enabled: false

# significantly less indentation involved; more consistent
Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent
Layout/FirstHashElementIndentation:
  EnforcedStyle: consistent

# favour parens-less DSL-style arguments
Lint/AmbiguousBlockAssociation:
  Enabled: false

Lint/DuplicateBranch:
  Enabled: false

# so many of these in formulae and can't be autocorrected
Lint/ParenthesesAsGroupedExpression:
  Enabled: false

# Most metrics don't make sense to apply for casks/formulae/taps.
Metrics/AbcSize:
  Enabled: false
Metrics/BlockLength:
  Enabled: false
Metrics/ClassLength:
  Enabled: false
Metrics/CyclomaticComplexity:
  Enabled: false
Metrics/MethodLength:
  Enabled: false
Metrics/ModuleLength:
  Enabled: false
Metrics/PerceivedComplexity:
  Enabled: false

# allow those that are standard
# TODO: try to remove some of these
Naming/MethodParameterName:
  AllowedNames:
    - "_"
    - "a"
    - "b"
    - "cc"
    - "c1"
    - "c2"
    - "d"
    - "e"
    - "f"
    - "ff"
    - "fn"
    - "id"
    - "io"
    - "o"
    - "p"
    - "pr"
    - "r"
    - "rb"
    - "s"
    - "to"
    - "v"

# GitHub diff UI wraps beyond 118 characters
Layout/LineLength:
  Max: 118
  # ignore manpage comments and long single-line strings
  IgnoredPatterns:
    [
      "#: ",
      ' url "',
      ' mirror "',
      " plist_options ",
      ' appcast "',
      ' executable: "',
      ' font "',
      ' homepage "',
      ' name "',
      ' pkg "',
      ' pkgutil: "',
      "    sha256 cellar: ",
      "    sha256  ",
      "#{language}",
      "#{version.",
      ' "/Library/Application Support/',
      '"/Library/Caches/',
      '"/Library/PreferencePanes/',
      ' "~/Library/Application Support/',
      '"~/Library/Caches/',
      '"~/Application Support',
      " was verified as official when first introduced to the cask",
    ]

# Avoid false positives on modifiers used on symbols of methods
# See https://github.com/rubocop-hq/rubocop/issues/5953
Style/AccessModifierDeclarations:
  Enabled: false

# Conflicts with type signatures on `attr_*`s.
Style/AccessorGrouping:
  Enabled: false

# Don't enforce documentation in casks or formulae.
Style/Documentation:
  Enabled: false

# Not used for casks and formulae.
Style/FrozenStringLiteralComment:
  Enabled: false

# potential for errors in formulae too high with this
Style/GuardClause:
  Enabled: false

# avoid hash rockets where possible
Style/HashSyntax:
  EnforcedStyle: ruby19

# so many of these in formulae and can't be autocorrected
Style/StringConcatenation:
  Enabled: false

# ruby style guide favorite
Style/StringLiterals:
  EnforcedStyle: double_quotes

# consistency with above
Style/StringLiteralsInInterpolation:
  EnforcedStyle: double_quotes

# make things a bit easier to read
Style/TernaryParentheses:
  EnforcedStyle: require_parentheses_when_complex

# `unless ... ||` and `unless ... &&` are hard to mentally parse
Style/UnlessLogicalOperators:
  Enabled: true
  EnforcedStyle: forbid_logical_operators

# a bit confusing to non-Rubyists but useful for longer arrays
Style/WordArray:
  MinSize: 4

# would rather freeze too much than too little
Style/MutableConstant:
  EnforcedStyle: strict

# unused keyword arguments improve APIs
Lint/UnusedMethodArgument:
  AllowUnusedKeywordArguments: true
