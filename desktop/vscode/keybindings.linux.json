[
    {
        "command": "breadcrumbs.toggle",
        "key": "ctrl+alt+b"
    },
    {
        "command": "-editor.action.addCommentLine",
        "key": "ctrl+k ctrl+c",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.blockComment",
        "key": "ctrl+shift+a",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.copyLinesDownAction",
        "key": "ctrl+shift+alt+down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.copyLinesDownAction",
        "key": "shift+alt+down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.copyLinesUpAction",
        "key": "ctrl+shift+alt+up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.copyLinesUpAction",
        "key": "shift+alt+up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+f3",
        "command": "-editor.action.dirtydiff.next",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+f12",
        "command": "editor.action.dirtydiff.next",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+f11",
        "command": "editor.action.dirtydiff.previous",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+f3",
        "command": "-editor.action.dirtydiff.previous",
        "when": "editorTextFocus"
    },
    {
        "command": "-editor.action.formatDocument",
        "key": "ctrl+shift+i",
        "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "command": "editor.action.formatDocument",
        "key": "shift+alt+f",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "command": "-editor.action.formatDocument.none",
        "key": "ctrl+shift+i",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "command": "editor.action.formatDocument.none",
        "key": "shift+alt+f",
        "when": "!editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "key": "ctrl+shift+l",
        "when": "editorTextFocus"
    },
    {
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "key": "shift+alt+i",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+\\",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "command": "-editor.action.removeCommentLine",
        "key": "ctrl+k ctrl+u",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.selectHighlights",
        "key": "ctrl+shift+a",
        "when": "editorFocus"
    },
    {
        "command": "-editor.action.selectHighlights",
        "key": "ctrl+shift+l",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "editor.action.selectToBracket",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.transformToLowercase",
        "key": "ctrl+k ctrl+l"
    },
    {
        "command": "editor.action.transformToTitlecase",
        "key": "ctrl+k ctrl+t"
    },
    {
        "command": "editor.action.transformToUppercase",
        "key": "ctrl+k ctrl+u"
    },
    {
        "key": "ctrl+shift+f9",
        "command": "editor.debug.action.runToCursor"
    },
    {
        "command": "extension.toggleTheme",
        "key": "ctrl+alt+d"
    },
    {
        "key": "ctrl+shift+g",
        "command": "git.openChange",
        "when": "editorTextFocus && !isInDiffEditor"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "git.stageSelectedRanges",
        "when": "editorHasSelection && editorTextFocus"
    },
    {
        "key": "ctrl+alt+v",
        "command": "gitlens.copyShaToClipboard"
    },
    {
        "command": "gitlens.externalDiff",
        "key": "ctrl+k ctrl+g"
    },
    {
        "command": "-markdown.extension.onShiftTabKey",
        "key": "shift+tab",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "command": "-markdown.extension.togglePreview",
        "key": "ctrl+shift+v",
        "when": "!terminalFocus"
    },
    {
        "command": "-markdown.extension.togglePreviewToSide",
        "key": "ctrl+k v",
        "when": "!terminalFocus"
    },
    {
        "command": "markdown.extension.togglePreviewToSide",
        "key": "ctrl+shift+v",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "command": "-markdown.showPreview",
        "key": "ctrl+shift+v",
        "when": "editorLangId == 'markdown'"
    },
    {
        "command": "-markdown.showPreviewToSide",
        "key": "ctrl+k v",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+o",
        "command": "outline.focus"
    },
    {
        "key": "ctrl+k shift+f",
        "command": "-poor-mans-t-sql-formatter.formatSql",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+meta+f",
        "command": "poor-mans-t-sql-formatter.formatSql",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'sql'"
    },
    {
        "key": "ctrl+alt+h",
        "command": "-rest-client.history"
    },
    {
        "command": "-sortLines.sortLines",
        "key": "f9",
        "when": "editorTextFocus"
    },
    {
        "command": "sortLines.sortLinesNatural",
        "key": "ctrl+k f5",
        "when": "editorTextFocus"
    },
    {
        "command": "sortLines.sortLinesNatural",
        "key": "f9",
        "when": "editorTextFocus && editorHasSelection && !inDebugMode"
    },
    {
        "key": "ctrl+shift+space",
        "command": "toggle.diff.ignoreTrimWhitespace",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+shift+g",
        "command": "toggle.diff.renderSideBySide",
        "when": "editorTextFocus && isInDiffEditor"
    },
    {
        "command": "-toggleFindCaseSensitive",
        "key": "alt+c",
        "when": "editorFocus"
    },
    {
        "command": "toggleFindCaseSensitive",
        "key": "ctrl+alt+c",
        "when": "editorFocus"
    },
    {
        "command": "-toggleFindRegex",
        "key": "alt+r",
        "when": "editorFocus"
    },
    {
        "command": "toggleFindRegex",
        "key": "ctrl+alt+r",
        "when": "editorFocus"
    },
    {
        "command": "-toggleFindWholeWord",
        "key": "alt+w",
        "when": "editorFocus"
    },
    {
        "command": "toggleFindWholeWord",
        "key": "ctrl+alt+w",
        "when": "editorFocus"
    },
    {
        "command": "-toggleSearchCaseSensitive",
        "key": "alt+c",
        "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchCaseSensitive",
        "when": "searchViewletFocus"
    },
    {
        "command": "toggleSearchCaseSensitive",
        "key": "ctrl+alt+c",
        "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "ctrl+alt+w",
        "command": "toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "command": "-toggleSearchRegex",
        "key": "alt+r",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "command": "toggleSearchRegex",
        "key": "ctrl+alt+r",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+alt+r",
        "command": "toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "command": "-toggleSearchWholeWord",
        "key": "alt+w",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "command": "toggleSearchWholeWord",
        "key": "ctrl+alt+w",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+alt+w",
        "command": "toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+meta+u",
        "command": "vscsm.openInSublimeMerge"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "command": "workbench.action.compareEditor.nextChange",
        "key": "alt+down",
        "when": "textCompareEditorVisible"
    },
    {
        "command": "-workbench.action.compareEditor.nextChange",
        "key": "alt+f5",
        "when": "textCompareEditorVisible"
    },
    {
        "command": "workbench.action.compareEditor.previousChange",
        "key": "alt+up",
        "when": "textCompareEditorVisible"
    },
    {
        "command": "-workbench.action.compareEditor.previousChange",
        "key": "shift+alt+f5",
        "when": "textCompareEditorVisible"
    },
    {
        "command": "workbench.action.editor.changeLanguageMode",
        "key": "ctrl+k ctrl+m"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+f12",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+f11",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.editorLayoutSingle",
        "key": "shift+alt+1"
    },
    {
        "command": "workbench.action.editorLayoutThreeColumns",
        "key": "shift+alt+3"
    },
    {
        "command": "workbench.action.editorLayoutTwoByTwoGrid",
        "key": "shift+alt+4"
    },
    {
        "command": "workbench.action.editorLayoutTwoColumns",
        "key": "shift+alt+2"
    },
    {
        "command": "workbench.action.gotoSymbol",
        "key": "ctrl+r"
    },
    {
        "command": "-workbench.action.gotoSymbol",
        "key": "ctrl+shift+o"
    },
    {
        "command": "-workbench.action.moveEditorToFirstGroup",
        "key": "shift+alt+1"
    },
    {
        "command": "-workbench.action.moveEditorToLastGroup",
        "key": "shift+alt+9"
    },
    {
        "command": "-workbench.action.moveEditorToNextGroup",
        "key": "ctrl+alt+right"
    },
    {
        "command": "workbench.action.moveEditorToNextGroup",
        "key": "shift+alt+]"
    },
    {
        "command": "-workbench.action.moveEditorToPreviousGroup",
        "key": "ctrl+alt+left"
    },
    {
        "command": "workbench.action.moveEditorToPreviousGroup",
        "key": "shift+alt+["
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack"
    },
    {
        "command": "-workbench.action.openRecent",
        "key": "ctrl+r"
    },
    {
        "command": "workbench.action.reloadWindow",
        "key": "ctrl+meta+f5"
    },
    {
        "command": "-workbench.action.reloadWindow",
        "key": "ctrl+r",
        "when": "isDevelopment"
    },
    {
        "command": "workbench.action.selectTheme",
        "key": "ctrl+k ctrl+c"
    },
    {
        "command": "-workbench.action.selectTheme",
        "key": "ctrl+k ctrl+t"
    },
    {
        "command": "-workbench.action.tasks.build",
        "key": "ctrl+shift+b"
    },
    {
        "args": "Pretty PHP",
        "command": "workbench.action.tasks.runTask",
        "key": "shift+alt+f",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'php'"
    },
    {
        "args": "Pretty PHP (remove empty lines)",
        "command": "workbench.action.tasks.runTask",
        "key": "shift+alt+meta+f",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'php'"
    },
    {
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "key": "alt+c",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "key": "ctrl+alt+c",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+alt+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "command": "-workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
        "key": "alt+c",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
        "key": "ctrl+alt+c",
        "when": "terminalFocus"
    },
    {
        "command": "-workbench.action.terminal.toggleFindRegex",
        "key": "alt+r",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "command": "workbench.action.terminal.toggleFindRegex",
        "key": "ctrl+alt+r",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+alt+r",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "command": "-workbench.action.terminal.toggleFindRegexTerminalFocus",
        "key": "alt+r",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.terminal.toggleFindRegexTerminalFocus",
        "key": "ctrl+alt+r",
        "when": "terminalFocus"
    },
    {
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "key": "alt+w",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "key": "ctrl+alt+w",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "command": "-workbench.action.terminal.toggleFindWholeWordTerminalFocus",
        "key": "alt+w",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.terminal.toggleFindWholeWordTerminalFocus",
        "key": "ctrl+alt+w",
        "when": "terminalFocus"
    },
    {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+b"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "ctrl+shift+b"
    },
    {
        "command": "-workbench.action.zoomIn",
        "key": "ctrl+="
    },
    {
        "command": "-workbench.action.zoomIn",
        "key": "ctrl+shift+="
    },
    {
        "command": "-workbench.action.zoomOut",
        "key": "ctrl+-"
    },
    {
        "command": "-workbench.extensions.action.showRecommendedKeymapExtensions",
        "key": "ctrl+k ctrl+m"
    }
]
